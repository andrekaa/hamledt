Pohnout se slovenským treebankem! Márii Šimkové jsem slíbil, že vytáhnu věty, kde se obě anotátorky shodly, a pošlu jí je. Ona sice nemá lingvisty, kteří by se tím mohli zabývat, ale pokud bude mít v ruce tohle, je tady určitá nenulová šance, že nakonec schválí, aby se část toho vydala. (Pak bude samozřejmě taky otázka licence. Ideální by bylo, kdyby vyšla Wikipedie a pohádky, které zřejmě nebudou závislé na autorských právech k textům.)

1. Vybrat dokumenty, které byly anotovány dvěma anotátory. Leží ve složce anotator1 nebo anotator2, např.:
   /net/work/people/zeman/slovallex/Wikipedia/anotator1/apollo001_tencerova_dok.a
   /net/work/people/zeman/slovallex/Wikipedia/anotator2/apollo001_kandracova_dok.a
   Dále vynechat dokumenty, které neobsahují ručně anotovanou morfologii.
   Ostatní dokumenty nás vůbec nezajímají.

2. Některé soubory obsahují chyby, kvůli kterým není možné je načíst do Treexu. Např. prázdný uzel s nedefinovaným id a ord na konci souboru /net/work/people/zeman/slovallex/BallekPomocnik/anotator1/H-Pomocnik-082_katarinag_dok.a:
  <LM id="">
   <ord></ord>
  </LM>
  Těchto chyb se musíme zbavit nezávisle na Treexu.
  Jestliže prvek <LM> nemá id, budeme předpokládat, že je prázdný a že ho vůbec nechceme.
  filter_stb_and_fix_pml.pl (volá fix_pml.pl)

3. Některé soubory obsahují duplikáty uzlů, a to včetně nezměněného id. Takové soubory sice Treex dokáže přečíst, ale
   je potřeba co nejdříve duplicitní uzly vyhledat a odstranit, aby Treex přestal řvát a aby následující operace
   nepracovaly s vadnými daty. Viz blok A2A::RemoveDuplicateNodes níže.

4. Také máme v některých místech vadné reference z vyšších rovin na nižší:
   doc0002774_job002: warning: KNIT failed: ID m-vojna007-p6s3w37 not found in reffile 'm'
   To se pravděpodobně vyřeší prostě tak, že budou prázdná některá pole (včetně slovního tvaru), na základě čehož nakonec dotyčný soubor vyhodíme.

5. Zkonvertovat soubory z formátu PDT PML do formátu CoNLL-X (2006).
   Id uzlu uložit do sloupce FEATS, abychom o něj nepřišli, protože obsahují původní název dokumentu, číslo odstavce, věty a slova.

treex -p -j100 -Lsk Read::PDT schema_dir=/net/work/people/zeman/treex/lib/Treex/Block/Read/PDT_schema from='!'/net/data/treebanks/sk/stb-fixed/*/anotator*/*.a top_layer=a A2A::RemoveDuplicateNodes Util::Eval atree='$._normalize_node_ordering()' Util::Eval anode='if($.afun() eq "???") {$.set_afun("NR")} my $id = $.id; $id =~ s/^a-//; $.set_conll_feat("id=".$id);' Write::CoNLLX is_member_within_afun=1 is_parenthesis_root_within_afun=1 substitute={stb-fixed}{stb-conll}

cat /net/data/treebanks/sk/stb-conll/*/anotator1/*.conll | wc_conll.pl
41819 sentences, 690994 tokens
cat /net/data/treebanks/sk/stb-conll/*/anotator2/*.conll | wc_conll.pl
41824 sentences, 691109 tokens

6. Pro každý dokument máme dvojici CoNLL souborů od dvou různých anotátorů. V několika párech nemají oba soubory stejný počet vět.
   Zřejmě jeden anotátor opravil segmentaci na věty a druhý ne. Takové soubory musíme vynechat, protože Read::AlignedCoNLL by nevěděl, co s nimi.
   Současně tento skript zjednoduší názvy souborů.

/net/work/people/zeman/hamledt/normalize/sk/remove_conll_files_with_unmatching_sentences.pl

cat /net/data/treebanks/sk/stb-conll/*/anotator1/*.conll | wc_conll.pl
40928 sentences, 677290 tokens
cat /net/data/treebanks/sk/stb-conll/*/anotator2/*.conll | wc_conll.pl
40928 sentences, 677295 tokens

7. Načíst páry souborů do Treexu vedle sebe (vždy anotátor 1 v jedné zóně a anotátor 2 ve druhé).

treex -p -j100 Read::AlignedCoNLL conll_format=2006 is_member_within_afun=1 is_parenthesis_root_within_afun=1 sk_annotator1='!/net/data/treebanks/sk/stb-conll/*/anotator1/*.conll' sk_annotator2='!/net/data/treebanks/sk/stb-conll/*/anotator2/*.conll' A2A::NodeIdFromCoNLLFeats language=sk selector=annotator1 A2A::NodeIdFromCoNLLFeats language=sk selector=annotator2 Write::Treex substitute='{stb-conll/(.*)/anotator[12]}{stb-merged/$1}'

Výsledkem je 1601 treexových souborů.

8. Spočítat mezianotátorskou shodu v různých parametrech:
  - Věty, které nemají stejný počet uzlů, jen spočítat, ale do dalších statistik nezahrnout.
  - Obdobně věty, které jsou prázdné nebo mají jen jeden uzel. Ty pro nás nejsou zajímavé.
  - Vyřadit věty, kde je prázdné nebo nedefinované alespoň jedno lemma, morfologická značka nebo druh závislosti. Ty nechceme, ani kdyby se anotátoři shodli.
  - Liší se někde slovní tvar?
  - Liší se někde lemma nebo morfologická značka?
  - UAS. Shodný rodič bez ohledu na druh závislosti.
  - LAS. Shodný rodič a druh závislosti.
  - Complete match. Celá věta shodná. Takové věty nás zajímají nejvíce.

Následující příkaz rovnou vyfiltruje věty, kde se oba anotátoři zcela shodují, a uloží je do stb-filtered (některé soubory mohou zůstat bez stromů).

treex -p -j100 -Lsk Read::Treex from='!/net/data/treebanks/sk/stb-merged/*/*.treex.gz' Eval::InterAnnotatorAgreement Write::Treex substitute='{stb-merged}{stb-filtered}' > iaa.log
perl -e 'while(<>) { chomp; my($x,$i)=split(/\t/,$_); $h{$x} += $i; } @k=sort(keys(%h)); foreach my $k (@k) { print "$k\t$h{$k}\n" }' < iaa.log

complete_match  10604
complete_match_token    106043
empty_deprel    1079
empty_lemma     759
empty_tag       748
lparent 539852
sentence        40350
sentence_too_short      414
token   671968
unmatched_deprel        46832
unmatched_form  747
unmatched_lemma 2
unmatched_parent        85284
unmatched_sentence_length       15
unmatched_tag   3
uparent 586684

UAS = 87.31%
LAS = 80.34%
CMS = 26.28%
CMT = 15.78%
průměrná délka věty přes všechny věty = 16,7 tokenu
průměrná délka věty přes vybrané věty = 10,0 tokenů

9. Zkonvertovat přefiltrovaný treebank do formátu CoNLL, soubory následně sloučíme.
   Vzít zónu sk_annotator1 (ta druhá je její přesnou kopií).

treex -p -j100 Util::SetGlobal language=sk selector=annotator1 if_missing_bundles=ignore Read::Treex from='!/net/data/treebanks/sk/stb-filtered/*/*.treex.gz' Util::Eval anode='my $id = $.id; $id =~ s/^sk-annotator1-//; $.set_conll_feat("id=$id");' Write::CoNLLX is_member_within_afun=1 is_parenthesis_root_within_afun=1 substitute='{stb-filtered}{stb-filtered-conll}'
for i in stb-filtered-conll/*/*.conll ; do j=`basename $i` ; d=`dirname $i | sed 's/conll/ids/'` ; mkdir -p $d ; perl -pe '$dir=lc("'$d'"); $dir =~ s:^stb-filtered-ids/::; $file="'$j'"; $an="(barbora[hs]|bugajova|hrenakova|hudekova|jankal|janovicka|kandarcova|kandracova|katarinag|mz|olejkarova|safarikova|tencerova|valachova)(_fsnew)?"; $file =~ s/(.+)_${an}_\1_${an}/$1/; $file =~ s/\.conll$//; $file =~ s/_kdok\.fsnew//; s:\tid=(.*?)\t:\tid=$dir/$file/$1\t:' < $i > $d/$j ; done
cat /net/data/treebanks/sk/stb-filtered-ids/*/*.conll > stb-match.conll
perl -e 'while(<>) { if(m/\tid=(.*?)\t/) { my $id = $1; if(exists($h{$id})) { print("DUPLICATE ID $id\n"); } $h{$id}++ } } my $n = scalar(keys(%h)); print("TOTAL $n UNIQUE IDS\n");' < stb-match.conll

10. Prohnat treebank hamledtí normalizací a zejména testy, jestli neobjeví nějaké další problémy.

    Výsledek: Na několika místech jsou dvě věty spojené do jednoho stromu, ale jinak jsou anotované správně (včetně AuxK na konci první věty).
    Na jednom místě má předložka AuxC místo AuxP. Nic závažnějšího jsem neobjevil.
